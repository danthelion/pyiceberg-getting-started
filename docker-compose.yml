version: "3.7"
services:
  spark-iceberg:
    image: tabulario/spark-iceberg
    container_name: spark-iceberg
    build: spark/
    depends_on:
      - rest
      - minio
    volumes:
      - ./warehouse:/home/iceberg/warehouse
      - ./notebooks:/home/iceberg/notebooks/notebooks
    environment:
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
      - AWS_REGION=us-east-1
    ports:
      - "8888:8888"
      - "8080:8080"
      - "10000:10000"
      - "10001:10001"
    links:
      - rest:rest
      - minio:minio
  rest:
    hostname: "iceberg"
    image: "tabulario/iceberg-rest:latest"
    container_name: "iceberg"
    ports:
      - "8181:8181"
    environment:
      CATALOG_S3_ENDPOINT: "http://minio:9000"
      CATALOG_IO__IMPL: "org.apache.iceberg.aws.s3.S3FileIO"
      CATALOG_WAREHOUSE: "s3a://nyc-taxi-trips"
      AWS_REGION: "us-east-1"
      AWS_ACCESS_KEY_ID: "minio"
      AWS_SECRET_ACCESS_KEY: "minio123"
  minio:
    hostname: "minio"
    image: "minio/minio:latest"
    container_name: "minio"
    ports:
      - "9001:9001"
      - "9000:9000"
    command:
      - "server"
      - "/data"
      - "--console-address"
      - ":9001"
    volumes:
      - "minio:/data"
    environment:
      MINIO_ROOT_USER: "minio"
      MINIO_ROOT_PASSWORD: "minio123"
  mc:
    depends_on:
      - "minio"
    image: "minio/mc"
    container_name: "mc"
    entrypoint: >
      /bin/sh -c " until (/usr/bin/mc config host add minio http://minio:9000
      minio minio123) do echo "...waiting..." && sleep 1; done; /usr/bin/mc rm
      -r --force minio/nyc-taxi-trips; /usr/bin/mc mb minio/nyc-taxi-trips;
      /usr/bin/mc policy set public minio/nyc-taxi-trips; exit 0; "
volumes:
  minio: null
